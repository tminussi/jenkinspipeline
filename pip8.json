{
	"info": {
		"name": "Demo for PI8",
		"_postman_id": "6b18fc22-cf5f-a8c4-a4be-12a4843303e1",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "E2E Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"const assert = require('assert');",
							"const host = 'http://localhost:8080';",
							"",
							"let promptId;",
							"let promptCount = 0;",
							"pm.sendRequest({",
							"        url: host + '/api/notifications',",
							"        method: 'POST',",
							"        header: 'Content-Type:application/json',",
							"        body: {",
							"            mode: 'raw',",
							"            raw: JSON.stringify({",
							"                name: \"GDPR prompt\",",
							"                language: \"EN\",",
							"                prompt: \"Do you consent?\",",
							"                validResponseObj: {label: \"YES\", data_type: \"BOOLEAN\"}",
							"            })",
							"        }",
							"    }, (err, res) => {",
							"        if (err.code >= 400) {",
							"            throw new Error('some error');",
							"        }",
							"        assert.equal(res.code, 201);",
							"        promptId = res.json().promptId;",
							"",
							"        pm.sendRequest({",
							"            url: host + '/api/notifications',",
							"            method: 'POST',",
							"            header: 'Content-Type:application/json',",
							"            body: {",
							"                mode: 'raw',",
							"                raw: JSON.stringify({",
							"                    name: \"kolejna sklonic\",",
							"                    language: \"PL\",",
							"                    prompt: \"czy zgadzasz sie?\",",
							"                    validResponseObj: {label: \"YES\", data_type: \"BOOLEAN\"}",
							"                })",
							"            }",
							"        }, (err, res) => {",
							"",
							"            pm.test('POSTs a new PROMPT in PL', () => {",
							"                assert.equal(res.code, 201);",
							"            });",
							"",
							"        });",
							"        pm.sendRequest({",
							"            url: host + '/api/notifications',",
							"            method: 'GET'",
							"        }, (err, res) => {",
							"",
							"            pm.test('GETs all notifications in EN', () => {",
							"                assert.equal(res.code, 200);",
							"                promptCount = res.json().length;",
							"                assert.ok(promptId);",
							"            });",
							"",
							"            pm.sendRequest({",
							"                url: host + '/api/platforms/ehost/users/matthew/notifications/' + promptId + '/responses',",
							"                method: 'POST',",
							"                header: 'Content-Type:application/json',",
							"                body: {",
							"                    mode: 'raw',",
							"                    raw: JSON.stringify({response: 'YES', data_type: 'BOOLEAN'})",
							"                }",
							"            }, (err, res) => {",
							"",
							"                pm.test('POST user response for ehost and user matthew', () => {",
							"                    assert.equal(res.code, 201);",
							"                });",
							"                pm.sendRequest({",
							"                    url: host + '/api/platforms/ehost/users/matthew/notifications?response_status=RESPONDED',",
							"                    method: 'GET'",
							"                }, (err, res) => {",
							"",
							"                    pm.test('GET RESPONDED prompts in EN for user matthew on ehost', () => {",
							"                        assert.equal(res.code, 200);",
							"                        assert.equal(res.json()[0].promptId, promptId);",
							"                    });",
							"                    pm.sendRequest({",
							"                        url: host + '/api/platforms/ehost/users/matthew/notifications/' + promptId + '/responses',",
							"                        method: 'GET'",
							"                    }, (err, res) => {",
							"",
							"                        pm.test('GET response for a specific prompt for user matthew on ehost', () => {",
							"                            assert.equal(res.code, 200);",
							"                            assert.equal(res.json().response.data_type, \"BOOLEAN\");",
							"                            assert.equal(res.json().response.response, \"YES\");",
							"                        });",
							"                        pm.sendRequest({",
							"                            url: host + '/api/platforms/ehost/users/matthew/notifications?response_status=RESPONDED&language=PL',",
							"                            method: 'GET'",
							"                        }, (err, res) => {",
							"",
							"                            pm.test('GET RESPONDED prompts in PL', () => {",
							"                                assert.equal(res.code, 200);",
							"                                assert.deepEqual(res.json(), []);",
							"                            });",
							"",
							"                            pm.sendRequest({",
							"                                url: host + '/api/platforms/ehost/users/matthew/notifications?response_status=NOT_RESPONDED',",
							"                                method: 'GET'",
							"                            }, (err, res) => {",
							"",
							"                                pm.test('GET NOT RESPONDED prompts in EN', () => {",
							"                                    assert.equal(res.code, 200);",
							"                                    assert.equal(res.json().length, 0);",
							"                                });",
							"",
							"                                pm.sendRequest({",
							"                                    url: host + '/api/platforms/ehost/users/matthew/notifications?response_status=NOT_RESPONDED&language=PL',",
							"                                    method: 'GET'",
							"                                }, (err, res) => {",
							"                                    if (res)",
							"                                        pm.test('GET NOT RESPONDED prompts in PL', () => {",
							"                                            assert.equal(res.code, 200);",
							"                                            assert.equal(res.json()[0].language, \"PL\");",
							"                                            assert.equal(res.json()[0].name, \"kolejna sklonic\");",
							"                                            assert.equal(res.json()[0].prompt, \"czy zgadzasz sie?\");",
							"                                            pm.sendRequest({",
							"                                                url: host + '/api/notifications/' + promptId,",
							"                                                header: 'Content-Type:application/json',",
							"                                                method: 'PUT',",
							"                                                body: {",
							"                                                    mode: 'raw',",
							"                                                    raw: JSON.stringify({",
							"                                                        notes: 'changed',",
							"                                                        platform: 'ehost',",
							"                                                        prompt: 'new prompt?',",
							"                                                        validResponseObj: {data_type: 'BOOLEAN', label: 'string'}",
							"                                                    })",
							"                                                }",
							"                                            }, (err, res) => {",
							"                                                if (res)",
							"                                                    pm.test('update EN prompt', () => {",
							"                                                        assert.equal(res.code, 201);",
							"                                                    })",
							"                                                pm.sendRequest({",
							"                                                    url: host + '/api/platforms/ehost/users/matthew/notifications?response_status=NOT_RESPONDED',",
							"                                                    method: 'GET'",
							"                                                }, (err, res) => {",
							"",
							"                                                    assert.equal(res.code, 200);",
							"                                                    assert.equal(res.json()[0].language, \"EN\");",
							"                                                    assert.equal(res.json()[0].name, \"GDPR prompt\");",
							"                                                    assert.equal(res.json()[0].prompt, \"new prompt?\");",
							"",
							"                                                });",
							"",
							"                                            });",
							"                                        });",
							"",
							"                                });",
							"",
							"                            });",
							"",
							"                        });",
							"",
							"                    });",
							"",
							"                });",
							"",
							"            });",
							"",
							"        });",
							"    });"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"GDPR prompt 4\",\n\t\"language\": \"EN\",\n\t\"prompt\": \"Do you consent?\",\n\t\"validResponseObj\": {\n\t\t\"label\": \"YES\",\n\t\t\"data_type\": \"BOOLEAN\"\t\n\t}\n\t\n}"
				},
				"url": {
					"raw": "http://localhost:8080/api/notifications/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"notifications",
						""
					]
				},
				"description": ""
			},
			"response": []
		}
	]
}